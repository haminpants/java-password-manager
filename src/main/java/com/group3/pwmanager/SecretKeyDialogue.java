package com.group3.pwmanager;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.crypto.SecretKey;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;

public class SecretKeyDialogue extends JDialog {
    private JPanel pnl_main;
    private JLabel lbl_prompt;
    private JPasswordField pwd_key;
    private JButton btn_toggleVisibility;
    private JButton btn_submit;

    private final char echoChar;
    private SecretKey key;

    public SecretKeyDialogue (Window owner) {
        super(owner, ModalityType.APPLICATION_MODAL);
        setContentPane(pnl_main);
        getRootPane().setDefaultButton(btn_submit);

        // Set parameters
        this.echoChar = pwd_key.getEchoChar();

        // Set up buttons
        btn_submit.addActionListener(event -> onSubmit());

        btn_toggleVisibility.addActionListener(
            event -> pwd_key.setEchoChar(pwd_key.getEchoChar() == echoChar ? (char) 0 : echoChar));

        // Set keybinds
        pnl_main.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW)
            .put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), "cancel");
        pnl_main.getActionMap().put("cancel", new AbstractAction() {
            @Override
            public void actionPerformed (ActionEvent e) {
                onCancel();
            }
        });
    }

    public SecretKey showKeyDialogue () {
        lbl_prompt.setText("Enter the key for your vault");

        pack();
        setLocationRelativeTo(getOwner());
        setVisible(true);
        return key;
    }

    private void onSubmit () {
        String keyString = new String(pwd_key.getPassword());
        if (keyString.isBlank()) return;

        key = EncryptionUtils.generateKeyFromString(keyString);
        dispose();
    }

    private void onCancel () {
        dispose();
    }

    {
        // GUI initializer generated by IntelliJ IDEA GUI Designer
        // >>> IMPORTANT!! <<<
        // DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$ () {
        pnl_main = new JPanel();
        pnl_main.setLayout(new GridLayoutManager(3, 2, new Insets(5, 15, 15, 15), -1, -1));
        lbl_prompt = new JLabel();
        lbl_prompt.setText("Enter your vault key");
        pnl_main.add(lbl_prompt, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        pwd_key = new JPasswordField();
        pnl_main.add(pwd_key,
            new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL,
                GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(300, -1),
                null, 0, false));
        btn_toggleVisibility = new JButton();
        btn_toggleVisibility.setIcon(new ImageIcon(getClass().getResource("/form_assets/visible_16px.png")));
        btn_toggleVisibility.setText("");
        btn_toggleVisibility.setToolTipText("Toggle visibility");
        pnl_main.add(btn_toggleVisibility,
            new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, 1,
                GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btn_submit = new JButton();
        btn_submit.setText("Submit");
        pnl_main.add(btn_submit,
            new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL,
                GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
                GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /** @noinspection ALL */
    public JComponent $$$getRootComponent$$$ () { return pnl_main; }
}