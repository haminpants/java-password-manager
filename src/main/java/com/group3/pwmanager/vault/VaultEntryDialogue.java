package com.group3.pwmanager.vault;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

public class VaultEntryDialogue extends JDialog {
    private JPanel pnl_main;
    private JTextField txt_title;
    private JTextField txt_username;
    private JPasswordField pwd_password;
    private JButton btn_togglePasswordVisibility;
    private JTextArea txa_note;
    private JButton btn_save;
    private JButton btn_saveClose;

    private char echoChar;
    private Vault vault;
    private VaultEntry entry;

    public VaultEntryDialogue (Vault vault) {
        // Set up dialogue
        super(vault.getFrame(), ModalityType.APPLICATION_MODAL);
        setTitle("Customize Vault Entry");
        setContentPane(pnl_main);
        pack();
        setLocationRelativeTo(vault.getFrame());
        getRootPane().setDefaultButton(btn_saveClose);

        // Handle dialogue closing
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing (WindowEvent e) {
                onCancel();
            }
        });

        // Set up buttons
        btn_save.setEnabled(false);
        btn_save.addActionListener(event -> save());
        btn_saveClose.addActionListener(event -> {
            if (save()) dispose();
        });

        btn_togglePasswordVisibility.addActionListener(
            event -> pwd_password.setEchoChar(pwd_password.getEchoChar() == echoChar ? (char) 0 : echoChar));

        // Set keybinds
        pnl_main.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW)
            .put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), "cancel");
        pnl_main.getActionMap().put("cancel", new AbstractAction() {
            @Override
            public void actionPerformed (ActionEvent e) {
                onCancel();
            }
        });

        // Set instance variables
        this.vault = vault;
        this.echoChar = pwd_password.getEchoChar();
    }

    public VaultEntryDialogue (Vault vault, VaultEntry entry) {
        this(vault);
        this.entry = entry;

        btn_save.setEnabled(true);

        txt_title.setText(entry.getTitle());
        txt_username.setText(entry.getUsername());
        pwd_password.setText(entry.getPassword());
        txa_note.setText(entry.getNote());
    }

    private boolean save () {
        String title, username, password, note;
        if ((title = txt_title.getText()).isBlank()) {
            JOptionPane.showMessageDialog(this, "Title cannot be empty!");
            return false;
        }
        if ((username = txt_username.getText()).isBlank()) {
            JOptionPane.showMessageDialog(this, "Username cannot be empty!");
            return false;
        }
        if ((password = new String(pwd_password.getPassword())).isBlank()) {
            JOptionPane.showMessageDialog(this, "Password cannot be empty!");
            return false;
        }
        note = txa_note.getText();

        if (entry != null) {
            entry.setTitle(title);
            entry.setUsername(username);
            entry.setPassword(password);
            entry.setNote(note);
            vault.getTableModel().updateEntry(entry);
        }
        else vault.add(new VaultEntry(title, username, password, note));
        vault.setUnsavedChanges(true);
        return true;
    }

    private void onCancel () {
        dispose();
    }

    {
        // GUI initializer generated by IntelliJ IDEA GUI Designer
        // >>> IMPORTANT!! <<<
        // DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$ () {
        pnl_main = new JPanel();
        pnl_main.setLayout(new GridLayoutManager(6, 4, new Insets(5, 15, 15, 15), -1, -1));
        final JLabel label1 = new JLabel();
        label1.setText("Title");
        pnl_main.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        txt_title = new JTextField();
        pnl_main.add(txt_title,
            new GridConstraints(0, 1, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL,
                GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1),
                null, 0, false));
        txt_username = new JTextField();
        pnl_main.add(txt_username,
            new GridConstraints(1, 1, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL,
                GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1),
                null, 0, false));
        pwd_password = new JPasswordField();
        pnl_main.add(pwd_password,
            new GridConstraints(2, 1, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL,
                GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1),
                null, 0, false));
        final JSeparator separator1 = new JSeparator();
        pnl_main.add(separator1,
            new GridConstraints(3, 1, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
                GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Username");
        pnl_main.add(label2, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("Password");
        pnl_main.add(label3, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label4 = new JLabel();
        label4.setText("Note");
        pnl_main.add(label4,
            new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_NORTHEAST, GridConstraints.FILL_NONE,
                GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        pnl_main.add(scrollPane1,
            new GridConstraints(4, 1, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
                GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW,
                GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0,
                false));
        txa_note = new JTextArea();
        txa_note.setColumns(30);
        txa_note.setLineWrap(false);
        txa_note.setRows(6);
        scrollPane1.setViewportView(txa_note);
        btn_save = new JButton();
        btn_save.setText("Save");
        pnl_main.add(btn_save,
            new GridConstraints(5, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL,
                GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
                GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btn_saveClose = new JButton();
        btn_saveClose.setText("Save and Close");
        pnl_main.add(btn_saveClose,
            new GridConstraints(5, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL,
                GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
                GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btn_togglePasswordVisibility = new JButton();
        btn_togglePasswordVisibility.setIcon(new ImageIcon(getClass().getResource("/form_assets/visible_16px.png")));
        btn_togglePasswordVisibility.setText("");
        btn_togglePasswordVisibility.setToolTipText("Toggle password visibility");
        pnl_main.add(btn_togglePasswordVisibility,
            new GridConstraints(2, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, 1,
                GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /** @noinspection ALL */
    public JComponent $$$getRootComponent$$$ () { return pnl_main; }
}